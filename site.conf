log_format json '{'
                    '"remote_addr": "$remote_addr",'
                    '"remote_user": "$remote_user",'
                    '"time_local": "$time_local",'
                    '"request_method": "$request_method",'
                    '"request_uri": "$request_uri",'
                    '"request_completion": "$request_completion",'
                    '"content_type": "$content_type",'
                    '"host": "$host",'
                    '"content_length": "$content_length",'
                    '"status": $status,'
                    '"body_bytes_sent": $body_bytes_sent,'
                    '"http_referer": "$http_referer",'
                    '"http_user_agent": "$http_user_agent",'
                    '"http_x_forwarded_for": "$http_x_forwarded_for",'
                    '"uuid": "$uuid",'
                    '"request_time": "$request_time",'
                    '"upstream_cache_status": "$upstream_cache_status"'
                  '}';

server {
  listen 4000 default_server;
  access_log  /dev/stdout json;
  error_log /dev/stdout;
  root /usr/share/nginx/www;
  index index.html index.htm;
  default_type text/html;
  server_name localhost;
  set_by_lua $uuid '
    char = {"a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z","0","1","2","3","4","5","6","7","8","9"}
    function random_string()
        local s = "" -- Start string
        for i = 1, 10 do
          s = s .. char[math.random(#char)]
        end
        return s
    end
    local time = os.date("%Y%m%d%H%M%S")
    return time .. "_" .. random_string()
  ';
  add_header X-UUID $uuid;

  location / {
    try_files $uri $uri/;
  }

  location /lua {
    content_by_lua '
     ngx.say("<H1>This is request ", ngx.var.uuid, "</H1>")
    ';
  }
}
